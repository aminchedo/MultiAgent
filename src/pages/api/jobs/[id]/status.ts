import type { NextApiRequest, NextApiResponse } from 'next'
import { jobsStore } from '../store'

function getAgentByProgress(p: number): string {
	if (p < 20) return 'planner'
	if (p < 40) return 'code_generator'
	if (p < 60) return 'tester'
	if (p < 80) return 'doc_generator'
	return 'reviewer'
}

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
	if (req.method !== 'GET') {
		return res.status(405).json({ error: 'Method not allowed' })
	}

	try {
		const { id } = req.query
		const backend = process.env.NEXT_PUBLIC_API_URL

		if (backend) {
			const resp = await fetch(`${backend}/api/status/${id}`, { method: 'GET' })
			if (!resp.ok) return res.status(resp.status).json({ error: `Upstream error ${resp.status}` })
			const data = await resp.json()
			return res.status(200).json(data)
		}

		const job = jobsStore.get(String(id))
		if (!job) return res.status(404).json({ error: 'Job not found' })

		const elapsedMs = Date.now() - job.createdAt
		const progress = Math.max(0, Math.min(100, Math.floor(elapsedMs / 200)))
		const status = progress >= 100 ? 'completed' : 'running'

		const files: any[] = []
		if (progress >= 40) {
			files.push(
				{
					path: 'src/App.jsx',
					content: `import React from 'react'\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <h1>ðŸŽ¨ Generated by Vibe Coding</h1>\n      <p>${job.description}</p>\n    </div>\n  )\n}\n`,
					language: 'javascript',
					size: 650,
					created_by: 'code_generator',
					is_binary: false,
					type: 'file'
				},
				{
					path: 'README.md',
					content: `# Generated Project\n\nDescription: ${job.description}\n`,
					language: 'markdown',
					size: 200,
					created_by: 'doc_generator',
					is_binary: false,
					type: 'file'
				}
			)
		}

		return res.status(200).json({
			id: job.id,
			description: job.description,
			status,
			progress,
			current_agent: getAgentByProgress(progress),
			files
		})
	} catch (err: any) {
		return res.status(500).json({ error: err?.message || 'Failed to fetch job status' })
	}
}