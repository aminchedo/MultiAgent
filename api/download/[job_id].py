from fastapi import FastAPI, HTTPException, Request
from fastapi.responses import Response
import json
import zipfile
import io
import os
import sys
sys.path.append(os.path.dirname(__file__))
from ..generate import jobs_db

app = FastAPI()

async def handler(request: Request):
    # Extract job_id from path
    path_parts = request.url.path.split('/')
    job_id = path_parts[-1] if path_parts else None
    
    if request.method == "GET":
        try:
            if not job_id or job_id not in jobs_db:
                return Response(
                    status_code=404,
                    content=json.dumps({"error": "Job not found"}),
                    media_type="application/json"
                )
            
            job = jobs_db[job_id]
            
            # Check if job is completed
            if job['status'] != 'completed':
                return Response(
                    status_code=400,
                    content=json.dumps({"error": "Job not completed yet"}),
                    media_type="application/json"
                )
            
            # Create ZIP file in memory
            zip_buffer = io.BytesIO()
            
            with zipfile.ZipFile(zip_buffer, 'w', zipfile.ZIP_DEFLATED) as zip_file:
                # Add README
                readme_content = f"""# Generated by Vibe Coding Platform

This project was generated by 5 AI agents working together.

## Project Description
{job['description']}

## Generated Files
"""
                
                for file in job.get('files', []):
                    readme_content += f"- {file['path']} ({file['language']})\n"
                
                readme_content += f"""

## How to Run
1. Install dependencies: `npm install`
2. Start development server: `npm start`
3. Open http://localhost:3000 in your browser

## Features
- âœ¨ AI-Powered Generation
- ðŸš€ Modern React Stack
- ðŸ“± Responsive Design
- ðŸŽ¨ Beautiful UI Components

Generated on: {job.get('completed_at', 'Unknown')}
"""
                
                zip_file.writestr('README.md', readme_content)
                
                # Add generated files
                for file in job.get('files', []):
                    zip_file.writestr(file['path'], file['content'])
                
                # Add package.json if not already included
                if not any(f['path'] == 'package.json' for f in job.get('files', [])):
                    package_json = {
                        "name": "vibe-coding-generated-app",
                        "version": "1.0.0",
                        "description": "Generated by Vibe Coding Platform",
                        "main": "index.js",
                        "scripts": {
                            "start": "react-scripts start",
                            "build": "react-scripts build",
                            "test": "react-scripts test",
                            "eject": "react-scripts eject"
                        },
                        "dependencies": {
                            "react": "^18.2.0",
                            "react-dom": "^18.2.0",
                            "react-scripts": "5.0.1"
                        },
                        "browserslist": {
                            "production": [
                                ">0.2%",
                                "not dead",
                                "not op_mini all"
                            ],
                            "development": [
                                "last 1 chrome version",
                                "last 1 firefox version",
                                "last 1 safari version"
                            ]
                        }
                    }
                    zip_file.writestr('package.json', json.dumps(package_json, indent=2))
            
            # Return ZIP file
            zip_buffer.seek(0)
            
            return Response(
                content=zip_buffer.getvalue(),
                media_type="application/zip",
                headers={
                    "Content-Disposition": f"attachment; filename=vibe-project-{job_id}.zip"
                }
            )
            
        except Exception as e:
            return Response(
                status_code=500,
                content=json.dumps({"error": str(e)}),
                media_type="application/json"
            )
    
    return Response(
        status_code=405,
        content=json.dumps({"error": "Method not allowed"}),
        media_type="application/json"
    )