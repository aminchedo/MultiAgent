from fastapi import FastAPI, HTTPException, Request
from fastapi.responses import JSONResponse, Response
import json
import zipfile
import io
import os
import sys

app = FastAPI()

# Import jobs database
sys.path.append(os.path.dirname(__file__))
from ..generate import jobs_db

async def handler(request: Request):
    # Extract job_id from path
    path_parts = request.url.path.split('/')
    job_id = path_parts[-1] if path_parts else None
    
    if request.method == "GET":
        try:
            if not job_id or job_id not in jobs_db:
                return JSONResponse(
                    status_code=404,
                    content={"error": "Job not found"}
                )
            
            job = jobs_db[job_id]
            
            if job['status'] != 'completed':
                return JSONResponse(
                    status_code=400,
                    content={"error": "Job not completed yet"}
                )
            
            # Create ZIP file with generated files
            zip_buffer = io.BytesIO()
            
            with zipfile.ZipFile(zip_buffer, 'w', zipfile.ZIP_DEFLATED) as zip_file:
                for file_info in job.get('files', []):
                    zip_file.writestr(file_info['path'], file_info['content'])
                
                # Add README
                readme_content = f"""# Generated by Vibe Coding Platform

This project was generated by 5 AI agents working together.

## Project Description
{job['description']}

## Generated Files
"""
                for file_info in job.get('files', []):
                    readme_content += f"- {file_info['path']} ({file_info['language']})\n"
                
                readme_content += f"""

## How to Run
1. Extract all files
2. Run `npm install` to install dependencies
3. Run `npm start` to start the development server

## Features
- âœ¨ AI-Powered Generation
- ðŸš€ Modern React Stack
- ðŸ“± Responsive Design
- ðŸŽ¨ Beautiful UI Components

Generated on: {job.get('completed_at', 'Unknown')}
"""
                
                zip_file.writestr('README.md', readme_content)
            
            zip_buffer.seek(0)
            
            return Response(
                content=zip_buffer.getvalue(),
                media_type='application/zip',
                headers={
                    'Content-Disposition': f'attachment; filename="vibe-project-{job_id}.zip"'
                }
            )
            
        except Exception as e:
            return JSONResponse(
                status_code=500,
                content={"error": str(e)}
            )
    
    return JSONResponse(
        status_code=405,
        content={"error": "Method not allowed"}
    )